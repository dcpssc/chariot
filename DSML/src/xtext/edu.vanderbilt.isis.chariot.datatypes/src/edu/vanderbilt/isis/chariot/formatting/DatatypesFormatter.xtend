/*
 * generated by Xtext
 */
package edu.vanderbilt.isis.chariot.formatting

import org.eclipse.xtext.formatting.impl.AbstractDeclarativeFormatter
import org.eclipse.xtext.formatting.impl.FormattingConfig
import edu.vanderbilt.isis.chariot.services.DatatypesGrammarAccess

import com.google.inject.Inject;
import org.eclipse.xtext.Keyword

// import edu.vanderbilt.isis.chariot.services.DatatypesGrammarAccess

/**
 * This class contains custom formatting declarations.
 * 
 * See https://www.eclipse.org/Xtext/documentation/303_runtime_concepts.html#formatting
 * on how and when to use it.
 * 
 * Also see {@link org.eclipse.xtext.xtext.XtextFormattingTokenSerializer} as an example
 */
class DatatypesFormatter extends AbstractDeclarativeFormatter {

	@Inject extension DatatypesGrammarAccess  
	
@Override override protected void configureFormatting(FormattingConfig v) {
		v.setWrappedLineIndentation(2)
		v.setAutoLinewrap(150)
		v.setLinewrap(1).after(messageElementRule)
		v.setLinewrap(1).after(XImportDeclarationRule)
		v.setLinewrap(1).after(XExpressionOrVarDeclarationRule)
		findKeywordPairs("{", "}").forEach(p|formatCurlyBraces(v,p.first, p.second))
		findKeywordPairs("(", ")").forEach(p|formatParentheses(v,p.first, p.second))
		findKeywordPairs("<", ">").forEach(p|formatParentheses(v,p.first, p.second))
		findKeywords(",").forEach(kw|v.setNoSpace.before(kw))
		findKeywords(":").forEach(kw|v.setNoSpace.before(kw))
		findKeywords(";").forEach(kw|formatSemicolon(v,kw))
		findKeywords(".").forEach(kw|formatDot(v,kw))

		v.setLinewrap(0, 1, 2).before(SL_COMMENTRule)
		v.setLinewrap(0, 1, 2).before(ML_COMMENTRule)
		v.setLinewrap(0, 1, 1).after(ML_COMMENTRule)
	}
	def formatSemicolon(FormattingConfig it, Keyword semicolon) {
		setNoSpace().before(semicolon);
		setLinewrap().after(semicolon);
	}

	def formatDot(FormattingConfig it, Keyword dot) {
		setNoSpace().around(dot);

	}

	def formatCurlyBraces(FormattingConfig it, Keyword kw1, Keyword kw2) {
		// setIndentation(kw1, kw2)
		setIndentationIncrement.after(kw1)
		setIndentationDecrement.before(kw2)
		setLinewrap.after(kw1)
		// setLinewrap.around(kw2)
		setLinewrap(1).after(kw2)
	}

	def formatParentheses(FormattingConfig it, Keyword kw1, Keyword kw2) {
		setNoSpace().around(kw1)
		setNoSpace().before(kw2)
	}
}
